#
# Set the following CI/CD variables in Settings → CI/CD → Variables:
#
# - UNITY_LICENSE: The XML contents of a Unity license file, activated manually or e.g. using
#                  https://gitlab.com/mr-watts/internal/yaml-unity-ci-cd-license-activator.
#
stages:
    - preparation
    - test
    - build
    - deploy

include:
    # TIP: If this job fails, you can just autofix the problems by running the same locally, and removing the
    # --verify-no-changes option.
    - component: $CI_SERVER_FQDN/mr-watts/internal/yaml-gitlab-ci-cd-components/dotnet-format@0.4.3
      inputs:
          input-file: App.csproj
          additional-arguments: --include=Assets/Scripts/ --include=Assets/Package/ --include=Assets/Tests/
          dotnet-version: '9.0'
          job-stage: test
          job-before-script: dotnet new console --no-restore --name=App --output=.

    - component: $CI_SERVER_FQDN/mr-watts/internal/yaml-gitlab-ci-cd-components/unity-dotnet-analyzers@0.4.3
      inputs:
          unity-project-directory: $CI_PROJECT_DIR
          unity-version: 6000.0.25f1
          unity-license: $UNITY_LICENSE
          dotnet-version: '9.0'
          job-file-download-token: $GITLAB_CI_CD_COMPONENTS_PROJECT_TOKEN
          component-version: '0.4.3'
          job-stage: test

    - component: $CI_SERVER_FQDN/mr-watts/internal/yaml-gitlab-ci-cd-components/unity-tests@0.4.3
      inputs:
          unity-project-directory: $CI_PROJECT_DIR
          unity-version: 6000.0.25f1
          unity-license: $UNITY_LICENSE
          dotnet-version: '9.0'
          job-stage: test

build-snapshot:
    stage: build
    image: node:current-alpine
    needs: []
    script:
        # Ensure the tarball name and package version include the commit name.
        - apk add git
        - >
            export SNAPSHOT_VERSION=`git describe --tags`;
            sed -i -e "s/\"version\": \"[0-9]*.[0-9]*.[0-9]*\",/\"version\": \"${SNAPSHOT_VERSION}\",/" "$UNITY_PACKAGE_PATH/package.json"
        - mkdir build
        - npm pack "${UNITY_PACKAGE_PATH}" --pack-destination=build/
    variables:
        UNITY_PACKAGE_PATH: "Assets/Package/"
    artifacts:
        paths:
            - build/
        expire_in: 30 days

registry-publication:
    stage: deploy
    image: node:current-alpine
    needs: []
    script:
        - echo "${NPM_REGISTRY_PATH}:_authToken=${CI_JOB_TOKEN}" > .npmrc
        - npm publish "${UNITY_PACKAGE_PATH}"
    variables:
        UNITY_PACKAGE_PATH: "Assets/Package/"
    only:
        - tags

workflow:
    rules:
        - if: $CI_MERGE_REQUEST_ID
          when: never
        - when: always